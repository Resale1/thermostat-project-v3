esphome:
  name: "pool-controller"
  on_boot:
    then:
      - switch.turn_off: ntc_vcc
      - display.page.show: starting_page
      - delay: 15s
esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  logs:
    climate: none
    sensor: none
    switch: none
    resistance: debug
    adc: debug

# Enable Home Assistant API
api:

ota:


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome-Web-9B23Ac"
    password: "sgxEvvkmlX6x"

captive_portal:

# Example configuration entry for ESP32
i2c:
  sda: 21
  scl: 22
  scan: true
  id: bus_a    

substitutions:
  room: Pool # Room Name
  entity_heater: switch.pool_heater
  default_low: "26.67"  #80
  default_mid: "30.0"   #86
  default_hi: "31.11"   #88

switch:
  - platform: gpio
    pin: 19
    id: ntc_vcc

  - platform: template
    id: heat_cool

    optimistic: true
  - platform: gpio
    id: relay_heater
    pin: 18
    name: Pool Heater

  - platform: gpio
    id: pump_1
    pin: 1
    name: Pool Pump Spd 1

  - platform: gpio
    id: pump_2
    pin: 2
    name: Pool Pump Spd 2

  - platform: gpio
    id: pump_3
    pin: 3
    name: Pool Pump Spd 3

  - platform: gpio
    id: pump_4
    pin: 4
    name: Pool Pump Spd 4

  - platform: gpio
    id: lights
    pin: 16
    name: Pool Light

binary_sensor:
  - platform: template
    id: fire

#### THERMOSTAT #######
climate:
  - platform: thermostat

    min_heating_off_time: 15s
    min_heating_run_time: 60s
    min_idle_time: 60s
    default_target_temperature_low: ${default_low}

    visual:
      min_temperature: 60°F
      max_temperature: 92°F
    name: "${room} Thermostat"
    id: this_thermostat
    sensor: water_temp

    
    preset:
      - name: Heat Low
        mode: heat
        default_target_temperature_low: ${default_low}
      
      - name: Heat Medium
        mode: heat
        default_target_temperature_low: ${default_mid}
      
      - name: Heat High
        mode: heat
        default_target_temperature_low: ${default_hi}

    preset_change:
      - logger.log: Preset Changed

    target_temperature_change_action:
      - logger.log: 
          format: "Temperature Target Changed - %.1f"
          args: ['id(this_thermostat).target_temperature_low']

    heat_action:
      - switch.turn_on: relay_heater
      - lambda: id(fire).publish_state(true);
      - homeassistant.service:
          service: homeassistant.turn_on
          data:
            entity_id: ${entity_heater}

    idle_action:      
      - switch.turn_off: relay_heater      
      - lambda: id(fire).publish_state(false);
      - homeassistant.service:
          service: homeassistant.turn_off
          data:
            entity_id: ${entity_heater}

####### Thermister Temp ###########
sensor:
  - platform: ntc
    sensor: resistance_sensor
    device_class: "temperature"
    name: Water Temperature
    id: water_temp
    calibration:      
    # From table , range near 70f
      - 19.9kOhm -> 10°C
      - 10.0kOhm -> 25°C
      - 5.32kOhm -> 40°C           
      #From https://phoenixsensors.com/wp-content/uploads/2019/04/PTS20-Pool-Temperature-Sensor-v1.1.pdf
      # - 52.38kOhm -> -9°C
      # - 10.00kOhm -> 25°C
      # - 1.75kOhm -> 70°C
# FROM EXAMPLE   - seems ot work ok wihtin 2 deg     
#        - 10.0kOhm -> 25°C
#        - 27.219kOhm -> 0°C
#       - 14.674kOhm -> 15°C        
    accuracy_decimals: 1 #for display only   
    filters:
      - filter_out: nan

  - platform: resistance
    id: resistance_sensor
    sensor: source_sensor
    configuration: DOWNSTREAM
    resistor: 6.8kOhm
    name: Resistance Sensor
    filters:
      - filter_out: nan

  - platform: adc
    id: source_sensor
    pin: 36
    # ESP32 pins GPIO32 through GPIO39 can be used. 36,39 rec
    attenuation: auto #11db
    update_interval: never
    filters:
      - filter_out: nan
      - median:
          window_size: 8
          send_every: 2
          send_first_at: 2
      # - quantile:
      #     window_size: 50
      #     send_every: 5
      #     send_first_at: 1
      #     quantile: .9

##### END OF THERMISTER ########      
  - platform: template      
    id: water_temp_f
    name: Water Temp F
    lambda: |-
      return id(water_temp).state * (9.0/5.0) + 32.0;
    unit_of_measurement: "°F"
    filters:
      - filter_out: nan

  - platform: template      
    id: target_f
    name: Target Temp F
    lambda: |-
      return id(this_thermostat).target_temperature_low * (9.0/5.0) + 32.0;
    unit_of_measurement: "°F"
    
interval:
  - interval: 10s
    then:
      - switch.turn_on: ntc_vcc
      - delay: 500ms #IMPORTANT

      - component.update: source_sensor                    
      - switch.turn_off: ntc_vcc
      - logger.log: 
          format: "---> Water Temp - %.1f °F | Set Point: %.2f °F <---"
          args: [' id(water_temp_f).state','id(target_f).state' ]
      
  - interval: 5s
    then:
      - if:
          condition:
            display.is_displaying_page: main_page
          then:
            display.page.show: graph_page
          else:
            display.page.show: main_page      
      - component.update: oled1
      
display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    id: oled1
    address: 0x3C
    pages:
      - id: main_page
        lambda: |-      
          if (id(fire).state) {id(ani_fire).next_frame(); it.image(0, 0, id(ani_fire));}    
          else {it.image(0, 0, id(home_thermometer));}
          it.print(64, 0,  id(font1), TextAlign::TOP_CENTER, "${room}");
          it.printf(64, 7, id(font_big), TextAlign::TOP_CENTER, " %.1f°", id(water_temp_f).state);
          it.printf(0, 64, id(font_small), TextAlign::BASELINE_LEFT, "SET:%.1f°", id(target_f).state);
    #      it.printf(5, 0, id(OpenSans), "temp: %.1f", id(water_temp_f).state);
    #      it.graph(0, 22, id(single_temperature_graph));
      - id: graph_page
        lambda: |-      
          it.printf(64, 0, id(font1),TextAlign::TOP_CENTER, "TEMP %.1f", id(water_temp_f).state);
          it.graph(0, 18, id(temp_target_graph));
      - id: starting_page
        lambda: |-
          it.print(64,0,id(font_big),TextAlign::TOP_CENTER,"STARTING");
graph:
  # Show bare-minimum auto-ranged graph
  - id: temp_target_graph
    duration: 1h
    x_grid: 15min
#    y_grid: 5
    width: 128
    height: 46
    border: false
    min_range: 60
    max_range: 100
    min_value: 60
    max_value: 100
    traces:
      - sensor: water_temp_f
        line_type: dotted
        line_thickness: 3
      - sensor: target_f
        line_type: solid
        line_thickness: 3

animation:
  - file: "_icons/thermostat/fire.gif"
    id: ani_fire
image:
  - file: "_icons/thermostat/home-thermometer.png"
    id: home_thermometer
  - file: "_icons/thermostat/arrow-left-circle-outline.png"
    id: arrow_left
  - file: "_icons/thermostat/arrow-right-circle-outline.png"
    id: arrow_right
  - file: "_icons/thermostat/lightbulb-on-outline.png"
    id: bulb
font:
  - file: "_fonts/nasalization.ttf"
    id: font1
    size: 20

  - file: "_fonts/refsan.ttf"
    id: font_big
    size: 40

  - file: "_fonts/refsan.ttf"
    id: font3
    size: 22

  - file: "_fonts/refsan.ttf"
    id: font_small
    size: 16
  - file: "_fonts/BebasNeue-Regular.ttf"
    id: font_cond
    size: 18    

